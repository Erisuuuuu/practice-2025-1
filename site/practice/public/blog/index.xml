<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Киберполигон</title>
    <link>http://localhost:1313/blog/</link>
    <description>Recent content in Blogs on Киберполигон</description>
    <generator>Hugo</generator>
    <language>ru-ru</language>
    <lastBuildDate>Mon, 31 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Backend Киберполигона</title>
      <link>http://localhost:1313/blog/post7/</link>
      <pubDate>Mon, 31 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/post7/</guid>
      <description></description>
    </item>
    <item>
      <title>Защита - 1</title>
      <link>http://localhost:1313/blog/post6/</link>
      <pubDate>Mon, 24 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/post6/</guid>
      <description>&lt;p&gt;К 24.03 надо было притоговить &lt;a href=&#34;https://docs.google.com/document/d/1-stpPMjGeDCqiMeZk6d5EXf_JDPa9qB-d8wY10zyh5s/edit?tab=t.x19mncoe3ufu&#34;&gt;отчёт&lt;/a&gt; по проделанной работе.&lt;/p&gt;&#xA;&lt;h1 id=&#34;задания&#34;&gt;Задания&lt;/h1&gt;&#xA;&lt;p&gt;В течение работы было предложено несколько заданий, направленных на освоение различных аспектов программирования на Python и разработки веб-приложений с использованием Django. Эти задания охватывали как базовые конструкции языка, так и более сложные концепции, такие как объектно-ориентированное программирование, работа с базами данных, разработка API и взаимодействие с GitHub.&lt;/p&gt;&#xA;&lt;h4 id=&#34;задание-1&#34;&gt;Задание 1.&lt;/h4&gt;&#xA;&lt;p&gt;Первое задание было посвящено основам Python. Оно включало несколько подзадач:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Проверка типа числа и вывод соответствующего сообщения в зависимости от его значения.&lt;/li&gt;&#xA;&lt;li&gt;Работа с вложенными списками и сортировка учеников по их оценкам.&lt;/li&gt;&#xA;&lt;li&gt;Обработка строк: разбиение по пробелам и объединение с помощью дефиса.&lt;/li&gt;&#xA;&lt;li&gt;Создание классов и применение принципов ООП для описания транспортных средств и автомобилей.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;задание-2&#34;&gt;Задание 2.&lt;/h4&gt;&#xA;&lt;p&gt;Второе задание было связано с разработкой веб-приложения на Django. Требовалось:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Обучение - 5. Финал</title>
      <link>http://localhost:1313/blog/post5/</link>
      <pubDate>Mon, 17 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/post5/</guid>
      <description>&lt;h1 id=&#34;задание&#34;&gt;Задание&lt;/h1&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;создать пользователя admin если у вас его еще нет, зайти в админку джанги, скрин в лс или на гит залить&lt;/li&gt;&#xA;&lt;li&gt;сделать страницу авторизации пользователей с помощью стандартной джанги авторизации (без api), зайти через эту страницу на сайт под админом&lt;/li&gt;&#xA;&lt;li&gt;добавить страницу для загрузки картинок, файлы должны храниться на сервере по пути /media/image, для файлов должны генерироваться свои имена на сервере, , нужно добавить отдельную таблицу в бд, (id_user, file_path, upload_date, description)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h1 id=&#34;итог&#34;&gt;Итог&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;Работа с пользователями Django&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Обучение - 4</title>
      <link>http://localhost:1313/blog/post4/</link>
      <pubDate>Mon, 10 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/post4/</guid>
      <description>&lt;h1 id=&#34;задание&#34;&gt;Задание&lt;/h1&gt;&#xA;&lt;p&gt;1 сделать простенькую html  страницу,&#xA;2 вывести на эту страницу данные из любой модели&lt;/p&gt;&#xA;&lt;h1 id=&#34;итог&#34;&gt;Итог&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;Frontend-основы&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Создал простую HTML-страницу&lt;/p&gt;&#xA;&lt;p&gt;Научился базовой вёрстке (теги, структура)&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Работа с Django Templates&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Передал данные из модели в шаблон&lt;/p&gt;&#xA;&lt;p&gt;Использовал шаблонизатор Django ({{ переменные }}, {% теги %})&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Связь фронтенда и бэкенда&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Настроил View для отображения данных&lt;/p&gt;&#xA;&lt;p&gt;Реализовал простой роутинг (urls.py)&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Работа с ORM в представлениях&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Делал запросы к БД через models&lt;/p&gt;&#xA;&lt;p&gt;Фильтровал и сортировал данные перед выводом&lt;/p&gt;</description>
    </item>
    <item>
      <title>Обучение - 3</title>
      <link>http://localhost:1313/blog/post3/</link>
      <pubDate>Mon, 03 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/post3/</guid>
      <description>&lt;h1 id=&#34;задания&#34;&gt;Задания:&lt;/h1&gt;&#xA;&lt;p&gt;REST Разработать простое API с CRUD-операциями для моделей которые создавали во 2 задании&#xA;работа с админкой, добавить модели которые были созданы во 2 задании в Django Admin.&#xA;проверить работоспособность с помощью postman&#xA;подключить модель из одного приложения в другое&lt;/p&gt;&#xA;&lt;h1 id=&#34;итог&#34;&gt;Итог&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;REST API&lt;/strong&gt;&#xA;Создавать CRUD-эндпоинты&#xA;Работать с DRF (сериализаторы, ViewSets)&#xA;Тестировать через Postman&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Django Admin&lt;/strong&gt;&#xA;Регистрировать модели&#xA;Настраивать интерфейс админки&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Архитектура&lt;/strong&gt;&#xA;Связывать модели между приложениями&#xA;Организовывать модульную структуру&lt;/p&gt;</description>
    </item>
    <item>
      <title>Обучение - 2</title>
      <link>http://localhost:1313/blog/post2-/</link>
      <pubDate>Mon, 24 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/post2-/</guid>
      <description>&lt;h1 id=&#34;глобальные-задачи&#34;&gt;Глобальные задачи:&lt;/h1&gt;&#xA;&lt;p&gt;развернуть простое веб-приложения с помощью фреймворка django&#xA;Работа с github&lt;/p&gt;&#xA;&lt;h1 id=&#34;мини-теория&#34;&gt;Мини-теория:&lt;/h1&gt;&#xA;&lt;p&gt;Ключевые компоненты веб-приложения:&#xA;Frontend (клиентская сторона)&#xA;Backend (серверная сторона)&#xA;База данных&lt;/p&gt;&#xA;&lt;h1 id=&#34;задания&#34;&gt;Задания:&lt;/h1&gt;&#xA;&lt;p&gt;создать новый проект на django название ник тг + project  пример QQeWlProject&#xA;создать 2 приложения и подключить их в проект&#xA;изменить настройки django проекта, а тоесть создать фай .env и спрятать там все ключи&#xA;Создать минимум 2 осмысленные таблицы с помощью django orm в одном из приложений проекта&#xA;загрузить проект на гитхаб&lt;/p&gt;</description>
    </item>
    <item>
      <title>Обучение - 1</title>
      <link>http://localhost:1313/blog/post1/</link>
      <pubDate>Mon, 17 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/post1/</guid>
      <description>&lt;p&gt;Первое задания чтобы мы изучили Python&lt;/p&gt;&#xA;&lt;h1 id=&#34;цели&#34;&gt;Цели:&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Изучить работу с коллекциями (списки, кортежи, множества, словари).&lt;/li&gt;&#xA;&lt;li&gt;Освоить базовые конструкции языка Python (переменные, типы данных, операторы, условные конструкции).&lt;/li&gt;&#xA;&lt;li&gt;Познакомиться с функциями (определение, аргументы, возвращаемые значения).&lt;/li&gt;&#xA;&lt;li&gt;Изучить основы ООП в Python (классы, объекты, инкапсуляция, наследование, полиморфизм)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;задание&#34;&gt;Задание&lt;/h1&gt;&#xA;&lt;p&gt;Задание 1&#xA;На вход подается число n в консоль должно вывестись “это число не подходит” если оно не целочисленное, вывестись если больше 18 то “возраст совершеннолетия”, если меньше то “возвраст несовершеннолетний”&lt;/p&gt;</description>
    </item>
    <item>
      <title>Вёрстка статей</title>
      <link>http://localhost:1313/blog/post8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/post8/</guid>
      <description>&lt;p&gt;Второй нашей задачей стало вёрстка &lt;a href=&#34;https://github.com/AnaktaCTF/CTF&#34;&gt;статей&lt;/a&gt; по кибербезопасности.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Статьи были представленны в формате Markdown требовалось сверстать их в HTML.&lt;/li&gt;&#xA;&lt;li&gt;Требовалось выбрать одну статью каждому участнику и закинуть свёрстанную версию в базу данных для доступа на сайте проекта&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;0704&#34;&gt;07.04&lt;/h4&gt;&#xA;&lt;p&gt;Я решил выбрать &lt;a href=&#34;https://github.com/AnaktaCTF/CTF/blob/main/WEB/DNS.md&#34;&gt;статью по Теме DNS&lt;/a&gt;, т. к. эту тему я как раз изучал на другом предмете.&lt;/p&gt;&#xA;&lt;h4 id=&#34;1404&#34;&gt;14.04&lt;/h4&gt;&#xA;&lt;p&gt;Далее требовалось загрузить эту статью в БД. Этим занялся наш ментор, нам лишь требовалось отправить статьи ему, и они попали на сайт проекта.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Подключение терминала к backend Киберполигона.</title>
      <link>http://localhost:1313/blog/post9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/post9/</guid>
      <description>&lt;p&gt;Мы получили задание сделать так, чтобы можно было управлять Docker-контейрерами через теримнал. Нам скинули код терминала, и нам требовалось его подключить к нашему проекту.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cyberpolygon2024/cyberpolygon/tree/vagrant_to_docker_replacement/src/backend&#34;&gt;Ссылка на ветку нашей команды в репозитории Киберполигона с нашей разработкой.&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;2804&#34;&gt;28.04&lt;/h4&gt;&#xA;&lt;p&gt;Мы подключили терминал через HTTPS запрос в коммандной строке с использованием Vagrant, чтобы с помошью этого выполнять действия над Docker-контейнерами.&lt;/p&gt;&#xA;&lt;p&gt;Лично я протестировал нововведение на своём личном компьютере и своих установленных контейнеров. Проверил выполнение команд таких как &amp;ldquo;start&amp;rdquo; и &amp;ldquo;stop&amp;rdquo;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
